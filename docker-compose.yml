version: "3.8"  # Utiliser une version plus récente de Docker Compose pour de meilleures fonctionnalités

services:
  api:
    container_name: api
    build:
      context: ./api  # Chemin du répertoire contenant le Dockerfile de l'API
      dockerfile: Dockerfile  # Nom du fichier Dockerfile
    env_file:
      - ./api/.env  # Chemin vers le fichier .env pour l'API
    ports:
      - "8000:8000"  # Mapper le port 8000 du conteneur sur le port 8000 de l'hôte
    networks:
      - backend  # Connecter l'API au réseau backend
    depends_on:
      - db  # L'API dépend de la disponibilité du service de base de données

  app:
    container_name: app
    build:
      context: .  # Chemin du répertoire contenant le Dockerfile de l'app
      dockerfile: Dockerfile  # Nom du fichier Dockerfile
    ports:
      - "80:80"  # Mapper le port 80 du conteneur sur le port 80 de l'hôte
    networks:
      - frontend  # Connecter l'app au réseau frontend
    depends_on:
      - api  # L'app front-end dépend de l'API


  db:
    image: postgres:13
    restart: always
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
      POSTGRES_DB: postgres
    ports:
      - "5432:5432"
    networks:
      - backend


networks:
  backend:
    driver: bridge  # Utiliser le driver bridge pour le réseau backend
  frontend:
    driver: bridge  # Utiliser le driver bridge pour le réseau frontend
